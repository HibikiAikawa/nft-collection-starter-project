{"ast":null,"code":"var _jsxFileName = \"/home/koya/Forstudy/Unchain/ETH-NFT-Collection/nft-collection-starter-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './styles/App.css';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport React, { useEffect, useState } from \"react\"; // Constantsを宣言する: constとは値書き換えを禁止した変数を宣言する方法です。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = 'あなたのTwitterのハンドルネームを貼り付けてください';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\nconst TOTAL_MINT_COUNT = 50;\n\nconst App = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState('');\n  console.log('currentAccount: ', currentAccount);\n\n  const checkIfWalletisConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log('Make sure you have MetaMask!');\n    } else {\n      console.log('We have the ethereum object', ethereum);\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log('Found an authorized account:', account);\n      setCurrentAccount(account);\n    } else {\n      console.log('No authorized account found');\n    }\n  }; // renderNotConnectedContainer メソッドを定義します。\n\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: connectWallet,\n    className: \"cta-button connect-wallet-button\",\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert('Get MetaMask');\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log('Connected', accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    checkIfWalletisConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header gradient-text\",\n          children: \"My NFT Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"\\u3042\\u306A\\u305F\\u3060\\u3051\\u306E\\u7279\\u5225\\u306A NFT \\u3092 Mint \\u3057\\u3088\\u3046\\uD83D\\uDCAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), currentAccount === \"\" ? renderNotConnectedContainer() : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: null,\n          className: \"cta-button connect-wallet-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built on @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"S8KSpqacgFxyJGEpg9GAXw28m5s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/koya/Forstudy/Unchain/ETH-NFT-Collection/nft-collection-starter-project/src/App.js"],"names":["React","useEffect","useState","TWITTER_HANDLE","TWITTER_LINK","OPENSEA_LINK","TOTAL_MINT_COUNT","App","currentAccount","setCurrentAccount","console","log","checkIfWalletisConnected","ethereum","window","accounts","request","method","length","account","renderNotConnectedContainer","connectWallet","alert","error","twitterLogo"],"mappings":";;;AAAA,OAAO,kBAAP;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;;AACA,MAAMC,cAAc,GAAG,+BAAvB;AACA,MAAMC,YAAY,GAAI,uBAAsBD,cAAe,EAA3D;AACA,MAAME,YAAY,GAAG,EAArB;AACA,MAAMC,gBAAgB,GAAG,EAAzB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,cAAhC;;AAEA,QAAMI,wBAAwB,GAAG,YAAY;AAC3C,UAAM;AAAEC,MAAAA;AAAF,QAAeC,MAArB;;AACA,QAAI,CAACD,QAAL,EAAe;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CE,QAA3C;AACD;;AAED,UAAME,QAAQ,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAAiB;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAjB,CAAvB;;AAEA,QAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACzB,YAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CQ,OAA5C;AACAV,MAAAA,iBAAiB,CAACU,OAAD,CAAjB;AACD,KAJD,MAIO;AACLT,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF,GAjBD,CAJgB,CAwBhB;;;AACA,QAAMS,2BAA2B,GAAG,mBAClC;AAAQ,IAAA,OAAO,EAAEC,aAAjB;AAAgC,IAAA,SAAS,EAAC,kCAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,QAAMA,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAM;AAAER,QAAAA;AAAF,UAAeC,MAArB;;AACA,UAAI,CAACD,QAAL,EAAe;AACbS,QAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD;;AACD,YAAMP,QAAQ,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAAiB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAjB,CAAvB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,QAAQ,CAAC,CAAD,CAAjC;AACAN,MAAAA,iBAAiB,CAACM,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACD,KATD,CASE,OAAOQ,KAAP,EAAc;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACD;AACF,GAbD;;AAeAtB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,wBAAwB;AACzB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKGJ,cAAc,KAAK,EAAnB,GACCY,2BAA2B,EAD5B,gBAGC;AAAQ,UAAA,OAAO,EAAE,IAAjB;AAAuB,UAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,cAAlC;AAAiD,UAAA,GAAG,EAAEI;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,IAAI,EAAEpB,YAFR;AAGE,UAAA,MAAM,EAAC,QAHT;AAIE,UAAA,GAAG,EAAC,YAJN;AAAA,oBAKG,aAAYD,cAAe;AAL9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA7ED;;GAAMI,G;;KAAAA,G;AA+EN,eAAeA,GAAf","sourcesContent":["import './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport React, { useEffect, useState } from \"react\";\n\n// Constantsを宣言する: constとは値書き換えを禁止した変数を宣言する方法です。\nconst TWITTER_HANDLE = 'あなたのTwitterのハンドルネームを貼り付けてください';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\nconst TOTAL_MINT_COUNT = 50;\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState('');\n  console.log('currentAccount: ', currentAccount);\n\n  const checkIfWalletisConnected = async () => {\n    const { ethereum } = window;\n    if (!ethereum) {\n      console.log('Make sure you have MetaMask!');\n    } else {\n      console.log('We have the ethereum object', ethereum);\n    }\n\n    const accounts = await ethereum.request({method: 'eth_accounts'});\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log('Found an authorized account:', account);\n      setCurrentAccount(account);\n    } else {\n      console.log('No authorized account found');\n    }\n  }\n\n\n  // renderNotConnectedContainer メソッドを定義します。\n  const renderNotConnectedContainer = () => (\n    <button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n      Connect to Wallet\n    </button>\n  );\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        alert('Get MetaMask');\n        return;\n      }\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n      console.log('Connected', accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkIfWalletisConnected();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">My NFT Collection</p>\n          <p className=\"sub-text\">\n            あなただけの特別な NFT を Mint しよう💫\n          </p>\n          {currentAccount === \"\" ? (\n            renderNotConnectedContainer()\n          ) : (\n            <button onClick={null} className='cta-button connect-wallet-button'>\n              </button>\n          )}\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built on @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}