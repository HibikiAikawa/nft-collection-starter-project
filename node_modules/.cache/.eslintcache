[{"/home/koya/Forstudy/Unchain/ETH-NFT-Collection/nft-collection-starter-project/src/index.js":"1","/home/koya/Forstudy/Unchain/ETH-NFT-Collection/nft-collection-starter-project/src/App.js":"2"},{"size":226,"mtime":1646814097469,"results":"3","hashOfConfig":"4"},{"size":5533,"mtime":1646909694015,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"q440p6",{"filePath":"9","messages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/home/koya/Forstudy/Unchain/ETH-NFT-Collection/nft-collection-starter-project/src/index.js",[],["12","13"],"/home/koya/Forstudy/Unchain/ETH-NFT-Collection/nft-collection-starter-project/src/App.js",["14","15","16","17","18"],"import './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from 'ethers';\nimport myEpicNft from './utils/MyEpicNFT.json';\n\n// Constantsを宣言する: constとは値書き換えを禁止した変数を宣言する方法です。\nconst TWITTER_HANDLE = 'xHibiking';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\nconst TOTAL_MINT_COUNT = 50;\nconst CLICKED = false;\n\nconst CONTRACT_ADDRESS = '0x29da88B9F5911d7628b9df89cd2E91913f05288C';\n\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [currentMintedNum, setMintedNum] = useState('')\n  const [mintInfo, setMintInfo] = useState('');\n  const [mintURL, setMintURL] = useState('');\n  console.log('currentAccount: ', currentAccount);\n\n  const checkIfWalletisConnected = async () => {\n    const { ethereum } = window;\n    if (!ethereum) {\n      console.log('Make sure you have MetaMask!');\n    } else {\n      console.log('We have the ethereum object', ethereum);\n    }\n\n    const accounts = await ethereum.request({method: 'eth_accounts'});\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log('Found an authorized account:', account);\n      setCurrentAccount(account);\n\n      setupEventListener();\n    } else {\n      console.log('No authorized account found');\n    }\n  }\n\n\n  // renderNotConnectedContainer メソッドを定義します。\n  const renderNotConnectedContainer = () => (\n    <button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n      Connect to Wallet\n    </button>\n  );\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        alert('Get MetaMask');\n        return;\n      }\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n      console.log('Connected', accounts[0]);\n      setCurrentAccount(accounts[0]);\n\n      setupEventListener();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const setupEventListener = async() => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer);\n\n        connectedContract.on('NewEpicNFTMinted', (from, tokenId) => {\n          console.log(from, tokenId.toNumber());\n          setMintedNum(tokenId);\n          setMintInfo(`NFTがミントされました! OpenSeaへのリンクはこちら`);\n          setMintURL(`https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`);\n        });\n\n        console.log('Setup event Listener!')\n      } else {\n        console.log('Ethereum object doesnt exist!')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const checkCurrentMintedNum = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer);\n        const newTokenId = await connectedContract.getTokenIds();\n        setMintedNum(newTokenId);\n        console.log('We could get tokenId!');\n      } else {\n        console.log('Ethereum object doesnt exist!');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n\n  const askContractToMintNft = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer);\n        console.log('Going to pop wallet now to pay gas...');\n        let nftTxn = await connectedContract.makeAnEpicNFT();\n        console.log('Mining.. please wait.');\n        await nftTxn.wait();\n\n        console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n      } else {\n        console.log('Ethereum object doesnt exist!');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  useEffect(() => {\n    checkIfWalletisConnected();\n    checkCurrentMintedNum();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">My NFT Collection</p>\n            <p className=\"sub-text\">\n              あなただけの特別な NFT を Mint しよう💫\n            </p>\n            {\n              currentAccount === \"\" ? (\n              renderNotConnectedContainer()\n            ) : (\n              <button onClick={askContractToMintNft} className='cta-button connect-wallet-button'>\n              Mint NFT\n              </button>\n            )}\n          <p className=\"sub-text\">{`現在までにミントされた数：${currentMintedNum} / 50`}</p>\n          <a href={mintURL}>{mintInfo}</a>\n\n        </div>\n\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={\"https://twitter.com/xHibiking\"}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built on @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":9,"column":7,"nodeType":"25","messageId":"26","endLine":9,"endColumn":19},{"ruleId":"23","severity":1,"message":"27","line":10,"column":7,"nodeType":"25","messageId":"26","endLine":10,"endColumn":19},{"ruleId":"23","severity":1,"message":"28","line":11,"column":7,"nodeType":"25","messageId":"26","endLine":11,"endColumn":23},{"ruleId":"23","severity":1,"message":"29","line":12,"column":7,"nodeType":"25","messageId":"26","endLine":12,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":138,"column":6,"nodeType":"32","endLine":138,"endColumn":8,"suggestions":"33"},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'TWITTER_LINK' is assigned a value but never used.","Identifier","unusedVar","'OPENSEA_LINK' is assigned a value but never used.","'TOTAL_MINT_COUNT' is assigned a value but never used.","'CLICKED' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkIfWalletisConnected'. Either include it or remove the dependency array.","ArrayExpression",["36"],"no-global-assign","no-unsafe-negation",{"desc":"37","fix":"38"},"Update the dependencies array to be: [checkIfWalletisConnected]",{"range":"39","text":"40"},[4269,4271],"[checkIfWalletisConnected]"]